---
title: "Analiza danych dla standardow XRF"
format: html
editor: visual
---

```{r setup, include=FALSE}
# Load packages
library(tidyverse)
library(gridExtra)

knitr::opts_chunk$set(
  echo = FALSE, #
  warning = FALSE,  # Suppress warnings
  message = FALSE   # Suppress messages
)
```

## Ogólna charakterystyka zbioru danych
```{r}
xrf_long <- read_rds("data/xrf_long.rds") %>%
  mutate(element = gsub(" ", "", element))

xrf_boxplot_prep <- xrf_long %>% 
  filter(treatment == "standard")

xrf_n_obs <- xrf_boxplot_prep %>% 
  group_by(element) %>% 
  summarise(n = n())

xrf_boxplot <- xrf_boxplot_prep %>% 
  left_join(xrf_n_obs, by = "element") %>% 
  mutate(id = paste(element, " (", n, ")", sep = "")) %>% 
  ggplot() +
  geom_boxplot(aes(y = concentration)) +
  facet_wrap(.~id, scales = "free") +
  theme(axis.text.x = element_blank(),
        axis.ticks.x = element_blank())

xrf_boxplot
```


## Zmienność wyników wzdłuż próbki

Jako przykład biorę dwa różne standardy: IAEA-457 i Carbonatite. Tworzę wykres pokazujący, jak zmieniają sie wartości wzdłuż skanowanej próbki dla wszystkich pierwiastków, dla których mamy dane z kart. Wartości dla każdego kroku pomiarowego to średnia z 3 replications. Osobno pokazane są wyniki dla dwóch wielkości okien. Skupiam się tylko na mokrych próbkach, zakładam że przy suchych wynik będzie ten sam.

```{r}
scan_var_ws_s_1 <- xrf_long %>% 
  filter(standard_ID == "IAEA-457" & treatment == "wet" & window_settings == "1 x 15 mm") %>%
  group_by(element, replication) %>% 
  mutate(step = as.integer(1:10)) %>%
  ungroup() %>% 
  group_by(element, step) %>% 
  summarise(mean_conc_4step = mean(concentration)) %>% 
  ggplot() +
  geom_line(aes(y = mean_conc_4step, x = step)) +
  geom_point(aes(y = mean_conc_4step, x = step)) +
    facet_wrap(.~element, scales = "free") +
  ggtitle("IAEA-457, WS: 1 x 15 mm")

scan_var_ws_s_1
```

```{r}
scan_var_ws_l_1 <- xrf_long %>% 
  filter(standard_ID == "IAEA-457" & treatment == "wet" & window_settings == "10 x 15 mm") %>%
  group_by(element, replication) %>% 
  mutate(step = as.integer(1:10)) %>% 
  ungroup() %>% 
  group_by(element, step) %>% 
  summarise(mean_conc_4step = mean(concentration)) %>% 
  ggplot() +
  geom_line(aes(y = mean_conc_4step, x = step)) +
  geom_point(aes(y = mean_conc_4step, x = step)) +
    facet_wrap(.~element, scales = "free") +
  ggtitle("IAEA-457, WS: 10 x 15 mm")

scan_var_ws_l_1
```

```{r}
scan_var_ws_s_2 <- xrf_long %>% 
  filter(standard_ID == "Carbonatite" & treatment == "wet" & window_settings == "1 x 15 mm") %>%
  group_by(element, replication) %>% 
  mutate(step = as.integer(1:10)) %>% 
  ungroup() %>% 
  group_by(element, step) %>% 
  summarise(mean_conc_4step = mean(concentration)) %>%
  filter(!element == "K" & !element == "S") %>% #values for each step = 0
  ggplot() +
  geom_line(aes(y = mean_conc_4step, x = step)) +
  geom_point(aes(y = mean_conc_4step, x = step)) +
    facet_wrap(.~element, scales = "free") +
  ggtitle("Carbonatite, WS: 1 x 15 mm")

scan_var_ws_s_2
```

```{r}
scan_var_ws_l_2 <- xrf_long %>% 
  filter(standard_ID == "Carbonatite" & treatment == "wet" & window_settings == "10 x 15 mm") %>%
  group_by(element, replication) %>% 
  mutate(step = as.integer(1:10)) %>% 
  ungroup() %>% 
  group_by(element, step) %>% 
  summarise(mean_conc_4step = mean(concentration)) %>% 
  filter(!element == "S") %>% #values in each step = 0
  ggplot() +
  geom_line(aes(y = mean_conc_4step, x = step)) +
  geom_point(aes(y = mean_conc_4step, x = step)) +
    facet_wrap(.~element, scales = "free") +
  ggtitle("Carbonatite, WS: 10 x 15 mm")

scan_var_ws_l_2
```

Komantarz: dla każdego pierwiastka jest obserwowana zmienność przy kolejnych krokach pomiarowych (tj. wynik nie jest stały wzdłuż próbki). Zmienność ta jest jednak w większości przypadków pozbawiona wyraźnych trendów, co sugeruje, że nie ma większego znaczenia, w którym miejscu próbki był robiony pomiar. Wyjątkiem jest może pierwszy pomiar przy większym oknie pomiarowym, który dla niektórych pierwiastków wykazuje wyraźnie niższe wartości (szczegolnie wyraźne przy standardzie IAEA). Ze względu na to do analiz lepiej brać medianę wyników niż średnią (mediana jest niezależna od ałtlajerów w przeciwieństiwe do średniej).

## Zakres zróżnicowania wyników dla replicates vs. error values (te raportowane w outpucie skanowania)

Celem wykresu jest pokazanie czy wartości błędu raportowane przy skanowaniu są realistyczne. Jest to robione w oparciu o zestawienie tych wartości z zakresem wyników uzyskanych w oparciu o kilkukrotny pomiar tej samej próbki. Pokazane jest odchlenie w procentach dla różnych treatment i wielkości okien pomiarowych. Dla error jest wzięta najmniejsza wartość ze wszystkich, więc rozpatrujemy pesymistyczny scenariusz. Dla replicates jest wzity po prostu zakres (największa - najmniejsza wartość). Tam gdzie pojawiają

```{r}
#| fig-width: 8
#| fig-height: 12
error_vs_range_dry_ws_s <- xrf_long %>% 
  filter(treatment == "dry" & window_settings == "1 x 15 mm") %>% 
  filter(!is.na(concentration) & !concentration == 0) %>% 
  group_by(standard_ID, element, replication) %>% 
  summarise(med_conc = median(concentration),
            med_error = median(error)) %>% 
  ungroup() %>% 
  group_by(standard_ID, element) %>% 
  summarise(min_error = min(med_error),
            conc_range = max(med_conc) - min(med_conc),
            mean_med_conc = mean(med_conc)) %>%
  pivot_longer(min_error:conc_range,
               names_to = "var",
               values_to = "value") %>% 
  mutate(perc_dev = (value/mean_med_conc)*100)

error_vs_range_dry_ws_s_mod <- error_vs_range_dry_ws_s %>% 
  mutate(perc_dev_text = round(perc_dev, digits = 0),
         perc_dev = ifelse(perc_dev > 200, 199.9999, perc_dev))

error_vs_range_dry_ws_s_plot <- ggplot() +
  geom_col(data = error_vs_range_dry_ws_s_mod,
           aes(x = element, y = perc_dev, fill = var),
           position = position_dodge()) +
  geom_text(data = filter(error_vs_range_dry_ws_s_mod, 
                         perc_dev == 199.9999),
            aes(x = element, y = perc_dev, label = perc_dev_text),
            position = position_dodge(),
            vjust = +0.5,
            hjust = +1.5) + 
  facet_wrap(.~standard_ID, scales = "fixed") +
  theme(legend.position = "bottom") +
  coord_flip() +
  ggtitle("Dry samples, WS: 1 x 15 mm")

error_vs_range_dry_ws_s_plot

```

P

```{r}
#| fig-width: 8
#| fig-height: 12
error_vs_range_dry_ws_l <- xrf_long %>% 
  filter(treatment == "dry" & window_settings == "10 x 15 mm") %>% 
  filter(!is.na(concentration) & !concentration == 0) %>% 
  group_by(standard_ID, element, replication) %>% 
  summarise(med_conc = median(concentration),
            med_error = median(error)) %>% 
  ungroup() %>% 
  group_by(standard_ID, element) %>% 
  summarise(min_error = min(med_error),
            conc_range = max(med_conc) - min(med_conc),
            mean_med_conc = mean(med_conc)) %>%
  pivot_longer(min_error:conc_range,
               names_to = "var",
               values_to = "value") %>% 
  mutate(perc_dev = (value/mean_med_conc)*100)

error_vs_range_dry_ws_l_mod <- error_vs_range_dry_ws_l %>% 
  mutate(perc_dev_text = round(perc_dev, digits = 0),
         perc_dev = ifelse(perc_dev > 200, 199.9999, perc_dev))

error_vs_range_dry_ws_l_plot <- ggplot() +
  geom_col(data = error_vs_range_dry_ws_l_mod,
           aes(x = element, y = perc_dev, fill = var),
           position = position_dodge()) +
  geom_text(data = filter(error_vs_range_dry_ws_l_mod, 
                         perc_dev == 199.9999),
            aes(x = element, y = perc_dev, label = perc_dev_text),
            position = position_dodge(),
            vjust = +0.5,
            hjust = +1.5) + 
  facet_wrap(.~standard_ID, scales = "fixed") +
  theme(legend.position = "bottom") +
  coord_flip() +
  ggtitle("Dry samples, WS: 10 x 15 mm")

error_vs_range_dry_ws_l_plot

```

```{r}
#| fig-width: 8
#| fig-height: 12
error_vs_range_wet_ws_s <- xrf_long %>% 
  filter(treatment == "wet" & window_settings == "1 x 15 mm") %>% 
  filter(!is.na(concentration) & !concentration == 0) %>% 
  group_by(standard_ID, element, replication) %>% 
  summarise(med_conc = median(concentration),
            med_error = median(error)) %>% 
  ungroup() %>% 
  group_by(standard_ID, element) %>% 
  summarise(min_error = min(med_error),
            conc_range = max(med_conc) - min(med_conc),
            mean_med_conc = mean(med_conc)) %>%
  pivot_longer(min_error:conc_range,
               names_to = "var",
               values_to = "value") %>% 
  mutate(perc_dev = (value/mean_med_conc)*100)

error_vs_range_wet_ws_s_mod <- error_vs_range_wet_ws_s %>% 
  mutate(perc_dev_text = round(perc_dev, digits = 0),
         perc_dev = ifelse(perc_dev > 200, 199.9999, perc_dev))

error_vs_range_wet_ws_s_plot <- ggplot() +
  geom_col(data = error_vs_range_wet_ws_s_mod,
           aes(x = element, y = perc_dev, fill = var),
           position = position_dodge()) +
  geom_text(data = filter(error_vs_range_wet_ws_s_mod, 
                         perc_dev == 199.9999),
            aes(x = element, y = perc_dev, label = perc_dev_text),
            position = position_dodge(),
            vjust = +0.5,
            hjust = +1.5) + 
  facet_wrap(.~standard_ID, scales = "fixed") +
  theme(legend.position = "bottom") +
  coord_flip() +
  ggtitle("Wet samples, WS: 1 x 15 mm")

error_vs_range_wet_ws_s_plot

```

```{r}
#| fig-width: 8
#| fig-height: 12
error_vs_range_wet_ws_l <- xrf_long %>% 
  filter(treatment == "wet" & window_settings == "10 x 15 mm") %>% 
  filter(!is.na(concentration) & !concentration == 0) %>% 
  group_by(standard_ID, element, replication) %>% 
  summarise(med_conc = median(concentration),
            med_error = median(error)) %>% 
  ungroup() %>% 
  group_by(standard_ID, element) %>% 
  summarise(min_error = min(med_error),
            conc_range = max(med_conc) - min(med_conc),
            mean_med_conc = mean(med_conc)) %>%
  pivot_longer(min_error:conc_range,
               names_to = "var",
               values_to = "value") %>% 
  mutate(perc_dev = (value/mean_med_conc)*100)

error_vs_range_wet_ws_l_mod <- error_vs_range_wet_ws_l %>% 
  mutate(perc_dev_text = round(perc_dev, digits = 0),
         perc_dev = ifelse(perc_dev > 200, 199.9999, perc_dev))

error_vs_range_wet_ws_l_plot <- ggplot() +
  geom_col(data = error_vs_range_wet_ws_l_mod,
           aes(x = element, y = perc_dev, fill = var),
           position = position_dodge()) +
  geom_text(data = filter(error_vs_range_wet_ws_l_mod, 
                         perc_dev == 199.9999),
            aes(x = element, y = perc_dev, label = perc_dev_text),
            position = position_dodge(),
            vjust = +0.5,
            hjust = +1.5) + 
  facet_wrap(.~standard_ID, scales = "fixed") +
  theme(legend.position = "bottom") +
  coord_flip() +
  ggtitle("Wet samples, WS: 10 x 15 mm")

error_vs_range_wet_ws_l_plot

```
!!! UWAGA ZMIENILEM KOD DO WYKRESOW DLA BLEDOW!

Komentarz: w zdecydowanej większości przypadków raportowany error jest zdecydowanie mniejszy niż rozbieżność wyników otrzymana w oparciu o kilkukrotny pomiar próbek, co znaczy że niedoszacowanie niepewności wyników nie będzie zazwyczaj istotnym problemem. Można jednak zauważyć, że mokre próbki pokazują większy odestek pierwiastków, dla których error \< range niż suche próbki szczególnie dla małego okna pomiarowego. To wskazuje że niepewność wyników wzrasta przy użyciu mniejszego okna pomiarowego i analizie wilgotnych próbek.

```{r}
#| fig-width: 8
#| fig-height: 12
error_vs_range_dry_ws_s_2box <- error_vs_range_dry_ws_s %>% 
  mutate(configuration = "Dry, WS 1 x 15 mm")

error_vs_range_dry_ws_l_2box <- error_vs_range_dry_ws_l %>% 
  mutate(configuration = "Dry, WS 10 x 15 mm")

error_vs_range_wet_ws_s_2box <- error_vs_range_wet_ws_s %>% 
  mutate(configuration = "Wet, WS 1 x 15 mm")

error_vs_range_wet_ws_l_2box <- error_vs_range_wet_ws_l %>% 
  mutate(configuration = "Wet, WS 10 x 15 mm")

error_vs_range_merged <- error_vs_range_dry_ws_s_2box %>% 
  ungroup() %>% 
  add_row(error_vs_range_dry_ws_l_2box) %>% 
  add_row(error_vs_range_wet_ws_s_2box) %>% 
  add_row(error_vs_range_wet_ws_l_2box)

error_vs_range_boxplot <- error_vs_range_merged %>% 
  ggplot() +
  geom_boxplot(aes(y = perc_dev, x = var, color = configuration)) +
  facet_wrap(.~element, scales = "free", ncol = 4) +
  theme(legend.position = "bottom")
  
error_vs_range_boxplot
```
```{r}
#| fig-width: 8
#| fig-height: 14
error_vs_value_plot <- error_vs_range_merged %>% 
  filter(var == "min_error") %>% 
  ggplot() +
  geom_point(aes(x = mean_med_conc, y = perc_dev, color = configuration)) +
  scale_x_continuous(guide = guide_axis(n.dodge = 2)) +
  facet_wrap(.~element, scales = "free") +
  theme(legend.position = "none") +
  labs(title = "(A) Measurement error vs. element concentration")

range_vs_value_plot <- error_vs_range_merged %>% 
  filter(var == "conc_range") %>% 
  ggplot() +
  geom_point(aes(x = mean_med_conc, y = perc_dev, color = configuration)) +
  scale_x_continuous(guide = guide_axis(n.dodge = 2)) +
  facet_wrap(.~element, scales = "free") +
  theme(legend.position = "bottom") +
  labs(title = "(B) Range in raplicates vs. element concentration ")

uncertainity_vs_value_plot <- grid.arrange(error_vs_value_plot,
                                           range_vs_value_plot,
                                           ncol = 1,
                                           heights = c(1, 1.2))
```



## koncentracja raportowana vs koncentracja pomierzona

Tutaj sprawdzamy, czy wzrost faktycznej koncentracji pierwiastka ("koncentracja raportowana") jest równoległy ze wzrostem koncentracji mierzonej. Dla utworzenia wykresów, wzięta jest średnia wartość z replicates dla każdego pierwiastka i podane są wartości dla każdego standardu. Niektóre pierwistki były obecne tylko w niektórych standardach, stąd mała liczba obserwacji na niektórych wykresach. Niebieska linia to krzywa regresji liniowej, a czarna linia to referencyjna krzywa 1:1 Rozpatrywane są różne warianty wielkośći okna i wilgotności.

```{r}
#| fig-width: 8
#| fig-height: 12
standard_conc <- xrf_long %>% 
   filter(treatment == "standard") %>%
  select(standard_ID, element, concentration) %>% 
  rename(standard_conc = concentration)

rap_vs_meas_dry_ws_s <- xrf_long %>% 
  filter(treatment == "dry" & window_settings == "1 x 15 mm") %>% 
  filter(!is.na(concentration) & !concentration == 0) %>% 
  group_by(standard_ID, element, replication) %>% 
  summarise(med_conc = median(concentration)) %>% 
  ungroup() %>% 
  group_by(standard_ID, element) %>% 
  summarise(measured_conc = mean(med_conc)) %>% 
  left_join(standard_conc) %>% 
  mutate(configuration = "Dry, WS 1 x 15 mm")

rap_vs_meas_dry_ws_s_plot <- ggplot(rap_vs_meas_dry_ws_s, 
                                    aes(x = standard_conc, y = measured_conc)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE, alpha = 0.4) +
   geom_abline(intercept = 0, slope = 1, color = "black", alpha = 0.3) +
  facet_wrap(.~ element, scales = "free", ncol = 4) +
  scale_x_continuous(guide = guide_axis(n.dodge = 2)) +
  theme(legend.position = "bottom") +
  ggtitle("Dry samples, WS: 1 x 15 mm")

rap_vs_meas_dry_ws_s_plot

```

```{r}
#| fig-width: 8
#| fig-height: 12

rap_vs_meas_dry_ws_l <- xrf_long %>% 
  filter(treatment == "dry" & window_settings == "10 x 15 mm") %>% 
  filter(!is.na(concentration) & !concentration == 0) %>% 
  group_by(standard_ID, element, replication) %>% 
  summarise(med_conc = median(concentration)) %>% 
  ungroup() %>% 
  group_by(standard_ID, element) %>% 
  summarise(measured_conc = mean(med_conc)) %>% 
  left_join(standard_conc) %>% 
  mutate(configuration = "Dry, WS 10 x 15 mm")

rap_vs_meas_dry_ws_l_plot <- ggplot(rap_vs_meas_dry_ws_l, 
                                    aes(x = standard_conc, y = measured_conc)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE, alpha = 0.4) +
   geom_abline(intercept = 0, slope = 1, color = "black", alpha = 0.3) +
  facet_wrap(.~ element, scales = "free", ncol = 4) +
  scale_x_continuous(guide = guide_axis(n.dodge = 2)) +
  theme(legend.position = "bottom") +
  ggtitle("Dry samples, WS: 10 x 15 mm")

rap_vs_meas_dry_ws_l_plot

```

```{r}
#| fig-width: 8
#| fig-height: 12

rap_vs_meas_wet_ws_s <- xrf_long %>% 
  filter(treatment == "wet" & window_settings == "1 x 15 mm") %>% 
  filter(!is.na(concentration) & !concentration == 0) %>% 
  group_by(standard_ID, element, replication) %>% 
  summarise(med_conc = median(concentration)) %>% 
  ungroup() %>% 
  group_by(standard_ID, element) %>% 
  summarise(measured_conc = mean(med_conc)) %>% 
  left_join(standard_conc) %>% 
  mutate(configuration = "Wet, WS 1 x 15 mm")

rap_vs_meas_wet_ws_s_plot <- ggplot(rap_vs_meas_wet_ws_s, 
                                    aes(x = standard_conc, y = measured_conc)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE, alpha = 0.4) +
   geom_abline(intercept = 0, slope = 1, color = "black", alpha = 0.3) +
  facet_wrap(.~ element, scales = "free", ncol = 4) +
  scale_x_continuous(guide = guide_axis(n.dodge = 2)) +
  theme(legend.position = "bottom") +
  ggtitle("Wet samples, WS: 1 x 15 mm")

rap_vs_meas_wet_ws_s_plot

```

```{r}
#| fig-width: 8
#| fig-height: 12

rap_vs_meas_wet_ws_l <- xrf_long %>% 
  filter(treatment == "wet" & window_settings == "10 x 15 mm") %>% 
  filter(!is.na(concentration) & !concentration == 0) %>% 
  group_by(standard_ID, element, replication) %>% 
  summarise(med_conc = median(concentration)) %>% 
  ungroup() %>% 
  group_by(standard_ID, element) %>% 
  summarise(measured_conc = mean(med_conc)) %>% 
  left_join(standard_conc) %>% 
  mutate(configuration = "Wet, WS 10 x 15 mm")

rap_vs_meas_wet_ws_l_plot <- ggplot(rap_vs_meas_wet_ws_l, 
                                    aes(x = standard_conc, y = measured_conc)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE, alpha = 0.4) +
  facet_wrap(.~ element, scales = "free", ncol = 4) +
  scale_x_continuous(guide = guide_axis(n.dodge = 2)) +
  geom_abline(intercept = 0, slope = 1, color = "black", alpha = 0.3) +
  theme(legend.position = "bottom") +
  ggtitle("Wet samples, WS: 10 x 15 mm")

rap_vs_meas_wet_ws_l_plot

```

Komentarz: wyniki dają zróżnicowany obraz. Kilka najważniejszych cech: - dla wszystkich pierwiastków krzywa regresji liniowej ma znaczące odchylenie od krzywej 1:1 = wartości rzeczywiste i pomierzone w żadnym przypadku nie są nawet blisko siebie - dla niektórych pierwiastków widać dobre dopasowanie modelu do obserwacji (Ca, Cu, K, Mg, Mn, Pb, Si, Ti, Sr) = obserwujemy liniową zależność między koncentracją rzeczywistą a koncentracją pomierzoną - co ciekawe wcale nie jest tak, że lepsze dopasowanie widzimy dla pierwiastków, które mają mały błąd pomiarowy. Np. Fe ma słabe dopasowanie modelu we wszystkich ustawieniach i raczej mały błąd pomiarowy (poprzednia seria wykresów); dla kontrastu Mg ma duż błąd pomiarowy, ale zochowuje dobre dopasowanie modelu. - przy niektórych pierwiastkach nie ma wielkiej różnicy, jakie są ustawienia, ale są przypadki, jak Cr, gdzie wielkość okna jest kluczowa - znacząco lepsze wyniki wychodzą dla większego okna pomiarowego w porównaniu do mniejszego (wilgotność ma w tym przypadku zdecydowanie mniejsze znaczenie)

## Koncentracja raportowana vs koncentracja pomierzonona - stosunki

To samo, co wyżej, tylko dla stosunków. Normalizuje wszstkie pierwiastki przez Ca, bo Ca występuje w większości próbek i ma relatywnie dobre dopasowanie modelu liniowego.

```{r}
#| fig-width: 8
#| fig-height: 12

ratio_val_dry_ws_s <- rap_vs_meas_dry_ws_s %>% 
  filter(element == "Ca") %>% 
  select(!element) %>% 
  rename(measured_ca = measured_conc,
         standard_ca = standard_conc)

rap_vs_meas_dry_ws_s_ratio <- rap_vs_meas_dry_ws_s %>% 
  left_join(ratio_val_dry_ws_s) %>% 
  mutate(measured_ratio = measured_conc/measured_ca,
         standard_ratio = standard_conc/standard_ca,
         measured_ratio_log = log(measured_conc/measured_ca),
         standard_ratio_log = log(standard_conc/standard_ca)) %>% 
  filter(!element == "Ca") %>% 
  mutate(ratio_id = paste(element, "/Ca"))


rap_vs_meas_dry_ws_s_ratio_plot <- ggplot(rap_vs_meas_dry_ws_s_ratio, 
                                    aes(x = standard_ratio, y = measured_ratio)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE, alpha = 0.4) +
   geom_abline(intercept = 0, slope = 1, color = "black", alpha = 0.3) +
  facet_wrap(.~ ratio_id, scales = "free", ncol = 4) +
  scale_x_continuous(guide = guide_axis(n.dodge = 2)) +
  theme(legend.position = "bottom") +
  ggtitle("Dry samples, WS: 1 x 15 mm")

rap_vs_meas_dry_ws_s_ratio_plot

```

```{r}
#| fig-width: 8
#| fig-height: 12

ratio_val_dry_ws_l <- rap_vs_meas_dry_ws_l %>% 
  filter(element == "Ca") %>% 
  select(!element) %>% 
  rename(measured_ca = measured_conc,
         standard_ca = standard_conc)

rap_vs_meas_dry_ws_l_ratio <- rap_vs_meas_dry_ws_l %>% 
  left_join(ratio_val_dry_ws_l) %>% 
  mutate(measured_ratio = measured_conc/measured_ca,
         standard_ratio = standard_conc/standard_ca,
         measured_ratio_log = log(measured_conc/measured_ca),
         standard_ratio_log = log(standard_conc/standard_ca)) %>% 
  filter(!element == "Ca") %>% 
  mutate(ratio_id = paste(element, "/Ca"))


rap_vs_meas_dry_ws_l_ratio_plot <- ggplot(rap_vs_meas_dry_ws_l_ratio, 
                                    aes(x = standard_ratio, y = measured_ratio)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE, alpha = 0.4) +
   geom_abline(intercept = 0, slope = 1, color = "black", alpha = 0.3) +
  facet_wrap(.~ ratio_id, scales = "free", ncol = 4) +
  scale_x_continuous(guide = guide_axis(n.dodge = 2)) +
  theme(legend.position = "bottom") +
  ggtitle("Dry samples, WS: 10 x 15 mm")

rap_vs_meas_dry_ws_l_ratio_plot

```

```{r}
#| fig-width: 8
#| fig-height: 12

ratio_val_wet_ws_s <- rap_vs_meas_wet_ws_s %>% 
  filter(element == "Ca") %>% 
  select(!element) %>% 
  rename(measured_ca = measured_conc,
         standard_ca = standard_conc)

rap_vs_meas_wet_ws_s_ratio <- rap_vs_meas_wet_ws_s %>% 
  left_join(ratio_val_wet_ws_s) %>% 
  mutate(measured_ratio = measured_conc/measured_ca,
         standard_ratio = standard_conc/standard_ca,
         measured_ratio_log = log(measured_conc/measured_ca),
         standard_ratio_log = log(standard_conc/standard_ca)) %>% 
  filter(!element == "Ca") %>% 
  mutate(ratio_id = paste(element, "/Ca"))


rap_vs_meas_wet_ws_s_ratio_plot <- ggplot(rap_vs_meas_wet_ws_s_ratio, 
                                    aes(x = standard_ratio, y = measured_ratio)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE, alpha = 0.4) +
   geom_abline(intercept = 0, slope = 1, color = "black", alpha = 0.3) +
  facet_wrap(.~ ratio_id, scales = "free", ncol = 4) +
  scale_x_continuous(guide = guide_axis(n.dodge = 2)) +
  theme(legend.position = "bottom") +
  ggtitle("Wet samples, WS: 1 x 15 mm")

rap_vs_meas_wet_ws_s_ratio_plot

```

```{r}
#| fig-width: 8
#| fig-height: 12

ratio_val_wet_ws_l <- rap_vs_meas_wet_ws_l %>% 
  filter(element == "Ca") %>% 
  select(!element) %>% 
  rename(measured_ca = measured_conc,
         standard_ca = standard_conc)

rap_vs_meas_wet_ws_l_ratio <- rap_vs_meas_wet_ws_l %>% 
  left_join(ratio_val_wet_ws_l) %>% 
  mutate(measured_ratio = measured_conc/measured_ca,
         standard_ratio = standard_conc/standard_ca,
         measured_ratio_log = log(measured_conc/measured_ca),
         standard_ratio_log = log(standard_conc/standard_ca)) %>% 
  filter(!element == "Ca") %>% 
  mutate(ratio_id = paste(element, "/Ca"))


rap_vs_meas_wet_ws_l_ratio_plot <- ggplot(rap_vs_meas_wet_ws_l_ratio, 
                                    aes(x = standard_ratio, y = measured_ratio)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE, alpha = 0.4) +
   geom_abline(intercept = 0, slope = 1, color = "black", alpha = 0.3) +
  facet_wrap(.~ ratio_id, scales = "free", ncol = 4) +
  scale_x_continuous(guide = guide_axis(n.dodge = 2)) +
  theme(legend.position = "bottom") +
  ggtitle("Wet samples, WS: 10 x 15 mm")

rap_vs_meas_wet_ws_l_ratio_plot

```

## Koncentracja raportowana vs koncentracja pomierzonona - stosunki logarytmiczne

To samo, co wyżej, tylko robię stosunki logarytmiczne.

```{r}
#| fig-width: 8
#| fig-height: 12

ratio_val_dry_ws_s <- rap_vs_meas_dry_ws_s %>% 
  filter(element == "Ca") %>% 
  select(!element) %>% 
  rename(measured_ca = measured_conc,
         standard_ca = standard_conc)

rap_vs_meas_dry_ws_s_ratio <- rap_vs_meas_dry_ws_s %>% 
  left_join(ratio_val_dry_ws_s) %>% 
  mutate(measured_ratio = measured_conc/measured_ca,
         standard_ratio = standard_conc/standard_ca,
         measured_ratio_log = log(measured_conc/measured_ca),
         standard_ratio_log = log(standard_conc/standard_ca)) %>% 
  filter(!element == "Ca") %>% 
  mutate(ratio_id_log = paste("log(", element, "/Ca)"))


rap_vs_meas_dry_ws_s_log_ratio_plot <- ggplot(rap_vs_meas_dry_ws_s_ratio, 
                                    aes(x = standard_ratio_log, y = measured_ratio_log)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE, alpha = 0.4) +
   geom_abline(intercept = 0, slope = 1, color = "black", alpha = 0.3) +
  facet_wrap(.~ ratio_id_log, scales = "free", ncol = 4) +
  scale_x_continuous(guide = guide_axis(n.dodge = 2)) +
  theme(legend.position = "bottom") +
  ggtitle("Dry samples, WS: 1 x 15 mm")

rap_vs_meas_dry_ws_s_log_ratio_plot

```

```{r}
#| fig-width: 8
#| fig-height: 12

ratio_val_dry_ws_l <- rap_vs_meas_dry_ws_l %>% 
  filter(element == "Ca") %>% 
  select(!element) %>% 
  rename(measured_ca = measured_conc,
         standard_ca = standard_conc)

rap_vs_meas_dry_ws_l_ratio <- rap_vs_meas_dry_ws_l %>% 
  left_join(ratio_val_dry_ws_l) %>% 
  mutate(measured_ratio = measured_conc/measured_ca,
         standard_ratio = standard_conc/standard_ca,
         measured_ratio_log = log(measured_conc/measured_ca),
         standard_ratio_log = log(standard_conc/standard_ca)) %>% 
  filter(!element == "Ca") %>% 
  mutate(ratio_id_log = paste("log(", element, "/Ca)"))


rap_vs_meas_dry_ws_l_log_ratio_plot <- ggplot(rap_vs_meas_dry_ws_l_ratio, 
                                    aes(x = standard_ratio_log, y = measured_ratio_log)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE, alpha = 0.4) +
   geom_abline(intercept = 0, slope = 1, color = "black", alpha = 0.3) +
  facet_wrap(.~ ratio_id_log, scales = "free", ncol = 4) +
  scale_x_continuous(guide = guide_axis(n.dodge = 2)) +
  theme(legend.position = "bottom") +
  ggtitle("Dry samples, WS: 10 x 15 mm")

rap_vs_meas_dry_ws_l_log_ratio_plot

```

```{r}
#| fig-width: 8
#| fig-height: 12

ratio_val_wet_ws_s <- rap_vs_meas_wet_ws_s %>% 
  filter(element == "Ca") %>% 
  select(!element) %>% 
  rename(measured_ca = measured_conc,
         standard_ca = standard_conc)

rap_vs_meas_wet_ws_s_ratio <- rap_vs_meas_wet_ws_s %>% 
  left_join(ratio_val_wet_ws_s) %>% 
  mutate(measured_ratio = measured_conc/measured_ca,
         standard_ratio = standard_conc/standard_ca,
         measured_ratio_log = log(measured_conc/measured_ca),
         standard_ratio_log = log(standard_conc/standard_ca)) %>% 
  filter(!element == "Ca") %>% 
  mutate(ratio_id_log = paste("log(", element, "/Ca)"))



rap_vs_meas_wet_ws_s_log_ratio_plot <- ggplot(rap_vs_meas_wet_ws_s_ratio, 
                                    aes(x = standard_ratio_log, y = measured_ratio_log)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE, alpha = 0.4) +
   geom_abline(intercept = 0, slope = 1, color = "black", alpha = 0.3) +
  facet_wrap(.~ ratio_id_log, scales = "free", ncol = 4) +
  scale_x_continuous(guide = guide_axis(n.dodge = 2)) +
  theme(legend.position = "bottom") +
  ggtitle("Wet samples, WS: 1 x 15 mm")

rap_vs_meas_wet_ws_s_log_ratio_plot

```

```{r}
#| fig-width: 8
#| fig-height: 12

ratio_val_wet_ws_l <- rap_vs_meas_wet_ws_l %>% 
  filter(element == "Ca") %>% 
  select(!element) %>% 
  rename(measured_ca = measured_conc,
         standard_ca = standard_conc)

rap_vs_meas_wet_ws_l_ratio <- rap_vs_meas_wet_ws_l %>% 
  left_join(ratio_val_wet_ws_l) %>% 
  mutate(measured_ratio = measured_conc/measured_ca,
         standard_ratio = standard_conc/standard_ca,
         measured_ratio_log = log(measured_conc/measured_ca),
         standard_ratio_log = log(standard_conc/standard_ca)) %>% 
  filter(!element == "Ca") %>% 
  mutate(ratio_id_log = paste("log(", element, "/Ca)"))



rap_vs_meas_wet_ws_l_log_ratio_plot <- ggplot(rap_vs_meas_wet_ws_l_ratio, 
                                    aes(x = standard_ratio_log, y = measured_ratio_log)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE, alpha = 0.4) +
   geom_abline(intercept = 0, slope = 1, color = "black", alpha = 0.3) +
  facet_wrap(.~ ratio_id_log, scales = "free", ncol = 4) +
  scale_x_continuous(guide = guide_axis(n.dodge = 2)) +
  theme(legend.position = "bottom") +
  ggtitle("Wet samples, WS: 10 x 15 mm")

rap_vs_meas_wet_ws_l_log_ratio_plot

```

# Koncentracja raportowana - koncentracja pomierzona; wyniki modelowania

Podsumowanie całej części "koncentracja raportowana - koncentracja pomierzona", gdzie wyniki są przedstawione w postaci współrzynników modelu liniowego. Wykresy dla danych surowych, stosunków i stosunków logarytmicznych są przedstawione w osobnch blokach. 
Dla wszystkich bloków R2 i slope interpretujemy tak samo - wszędzie im bliżej 1 tym lepiej.
Intercept interpretujemu różnie w zależności od scenariusza: 
- dla raw elements, intercept idealny = 0,
- dla element rations, intercept idealny = 1,
- dla element log ratios, intercept idealny = 0
Jednocześnie odchylenia od ideału, w sensie wawrtości bezwzlgędnych tego odchylenia, interepretujemy inaczej (np. odchylenie rzędu 10 będzie miało inne znaczenie dla scenariusza "raw elements"i "element log ratios")

```{r}
#| fig-width: 8
#| fig-height: 12
rap_vs_meas_dry_mod <- 
  rap_vs_meas_dry_ws_s %>% 
  ungroup() %>% 
  add_row(rap_vs_meas_dry_ws_l) %>% 
  add_row(rap_vs_meas_wet_ws_s) %>% 
  add_row(rap_vs_meas_wet_ws_l) %>% 
  group_by(element, configuration) %>% 
  summarise(r_squared = summary(lm(measured_conc ~ standard_conc))$r.squared,
            intercept = coef(lm(measured_conc ~ standard_conc))["(Intercept)"],
            slope = coef(lm(measured_conc ~ standard_conc))["standard_conc"],
            n = n())

rap_vs_meas_dry_mod_r2_plot <- ggplot() +
  geom_col(data = rap_vs_meas_dry_mod,
           aes(x = r_squared, y = element, fill = configuration),
           position = position_dodge()) +
  theme(legend.position = "none") +
  labs(title = "Rsquared")

rap_vs_meas_dry_mod_intercept_plot <- ggplot() +
  geom_col(data = rap_vs_meas_dry_mod,
           aes(x = intercept, y = element, fill = configuration),
           position = position_dodge()) +
  theme(legend.position = "none",
        axis.title.y = element_blank(),
        axis.text.y = element_blank()
        ) +
  labs(title = "Intercept")

rap_vs_meas_dry_mod_slope_plot <- ggplot() +
  geom_col(data = rap_vs_meas_dry_mod,
           aes(x = slope, y = element, fill = configuration),
           position = position_dodge()) +
  theme(legend.position = "none",
        axis.title.y = element_blank(),
        axis.text.y = element_blank()
        ) +
  labs(title = "Slope")

rap_vs_meas_dry_mod_n_plot <- ggplot() +
  geom_col(data = rap_vs_meas_dry_mod,
           aes(x = n, y = element, fill = configuration),
           position = position_dodge()) +
  theme(legend.position = "right",
        axis.title.y = element_blank(),
        axis.text.y = element_blank()
        ) +
  labs(title = "Number of observations")

rap_vs_meas_dry_mod_plot <- grid.arrange(rap_vs_meas_dry_mod_r2_plot,
                                       rap_vs_meas_dry_mod_intercept_plot,
                                       rap_vs_meas_dry_mod_slope_plot,
                                       rap_vs_meas_dry_mod_n_plot, 
                                       ncol = 4,
                                       widths = c(1,1,1,2),
                                       top = "Raw element concentrations")

```
```{r}
#| fig-width: 8
#| fig-height: 12
rap_vs_meas_dry_mod_ratio <- 
  rap_vs_meas_dry_ws_s_ratio %>% 
  ungroup() %>% 
  add_row(rap_vs_meas_dry_ws_l_ratio) %>% 
  add_row(rap_vs_meas_wet_ws_s_ratio) %>% 
  add_row(rap_vs_meas_wet_ws_l_ratio) %>%
  mutate(ratio_id = paste(element, "/Ca")) %>% 
  group_by(ratio_id, configuration) %>% 
  summarise(r_squared = summary(lm(measured_ratio ~ standard_ratio))$r.squared,
            intercept = coef(lm(measured_ratio ~ standard_ratio))["(Intercept)"],
            slope = coef(lm(measured_ratio ~ standard_ratio))["standard_ratio"],
            n = n())

rap_vs_meas_dry_mod_r2_plot_ratio <- ggplot() +
  geom_col(data = rap_vs_meas_dry_mod_ratio,
           aes(x = r_squared, y = ratio_id, fill = configuration),
           position = position_dodge()) +
  theme(legend.position = "none") +
  labs(title = "Rsquared")

rap_vs_meas_dry_mod_intercept_plot_ratio <- ggplot() +
  geom_col(data = rap_vs_meas_dry_mod_ratio,
           aes(x = intercept, y = ratio_id, fill = configuration),
           position = position_dodge()) +
  theme(legend.position = "none",
        axis.title.y = element_blank(),
        axis.text.y = element_blank()
        ) +
  labs(title = "Intercept")

rap_vs_meas_dry_mod_slope_plot_ratio <- ggplot() +
  geom_col(data = rap_vs_meas_dry_mod_ratio,
           aes(x = slope, y = ratio_id, fill = configuration),
           position = position_dodge()) +
  theme(legend.position = "none",
        axis.title.y = element_blank(),
        axis.text.y = element_blank()
        ) +
  labs(title = "Slope")

rap_vs_meas_dry_mod_n_plot_ratio <- ggplot() +
  geom_col(data = rap_vs_meas_dry_mod_ratio,
           aes(x = n, y = ratio_id, fill = configuration),
           position = position_dodge()) +
  theme(legend.position = "right",
        axis.title.y = element_blank(),
        axis.text.y = element_blank()
        ) +
  labs(title = "Number of observations")

rap_vs_meas_dry_mod_plot_ratio <- grid.arrange(rap_vs_meas_dry_mod_r2_plot_ratio,
                                       rap_vs_meas_dry_mod_intercept_plot_ratio,
                                       rap_vs_meas_dry_mod_slope_plot_ratio,
                                       rap_vs_meas_dry_mod_n_plot_ratio, 
                                       ncol = 4,
                                       widths = c(1,1,1,2),
                                       top = "Element ratios")

```
```{r}
#| fig-width: 8
#| fig-height: 12
rap_vs_meas_dry_mod_ratio_log <- 
  rap_vs_meas_dry_ws_s_ratio %>% 
  ungroup() %>% 
  add_row(rap_vs_meas_dry_ws_l_ratio) %>% 
  add_row(rap_vs_meas_wet_ws_s_ratio) %>% 
  add_row(rap_vs_meas_wet_ws_l_ratio) %>%
  group_by(ratio_id_log, configuration) %>% 
  summarise(r_squared = summary(lm(measured_ratio_log ~ standard_ratio_log))$r.squared,
            intercept = coef(lm(measured_ratio_log ~ standard_ratio_log))["(Intercept)"],
            slope = coef(lm(measured_ratio_log ~ standard_ratio_log))["standard_ratio_log"],
            n = n())

rap_vs_meas_dry_mod_r2_plot_ratio_log <- ggplot() +
  geom_col(data = rap_vs_meas_dry_mod_ratio_log,
           aes(x = r_squared, y = ratio_id_log, fill = configuration),
           position = position_dodge()) +
  theme(legend.position = "none") +
  labs(title = "Rsquared")

rap_vs_meas_dry_mod_intercept_plot_ratio_log <- ggplot() +
  geom_col(data = rap_vs_meas_dry_mod_ratio_log,
           aes(x = intercept, y = ratio_id_log, fill = configuration),
           position = position_dodge()) +
  theme(legend.position = "none",
        axis.title.y = element_blank(),
        axis.text.y = element_blank()
        ) +
  labs(title = "Intercept")

rap_vs_meas_dry_mod_slope_plot_ratio_log <- ggplot() +
  geom_col(data = rap_vs_meas_dry_mod_ratio_log,
           aes(x = slope, y = ratio_id_log, fill = configuration),
           position = position_dodge()) +
  theme(legend.position = "none",
        axis.title.y = element_blank(),
        axis.text.y = element_blank()
        ) +
  labs(title = "Slope")

rap_vs_meas_dry_mod_n_plot_ratio_log <- ggplot() +
  geom_col(data = rap_vs_meas_dry_mod_ratio_log,
           aes(x = n, y = ratio_id_log, fill = configuration),
           position = position_dodge()) +
  theme(legend.position = "right",
        axis.title.y = element_blank(),
        axis.text.y = element_blank()
        ) +
  labs(title = "Number of observations")

rap_vs_meas_dry_mod_plot_ratio_log <- grid.arrange(rap_vs_meas_dry_mod_r2_plot_ratio_log,
                                       rap_vs_meas_dry_mod_intercept_plot_ratio_log,
                                       rap_vs_meas_dry_mod_slope_plot_ratio_log,
                                       rap_vs_meas_dry_mod_n_plot_ratio_log, 
                                       ncol = 4,
                                       widths = c(1,1,1,2),
                                       top = "Logarithmic ratios of elements")

```

# Koncentracja raportowana - koncentracja pomierzona; wyniki modelowania, boxploty
Tutaj jest podsumowanie podsumowania, czyli wrzucam na boxploty parametry modeli, żeby jak najbardziej syntetycznie przedstawić wyniki

```{r}
#| fig-width: 8
#| fig-height: 14
raw_4boxplots <- rap_vs_meas_dry_mod %>% 
  mutate(approach = "raw") %>% 
  rename(id = element)

ratios_4boxplots <- rap_vs_meas_dry_mod_ratio %>% 
  mutate(approach = "ratio") %>% 
  rename(id = ratio_id)

log_ratios_4boxplots <- rap_vs_meas_dry_mod_ratio_log %>% 
  mutate(approach = "log ratio") %>% 
  rename(id = ratio_id_log)

mod_boxplots <- raw_4boxplots %>% 
  ungroup() %>% 
  add_row(ratios_4boxplots) %>% 
  add_row(log_ratios_4boxplots)

mod_boxplots_r2 <- ggplot(mod_boxplots) +
  geom_boxplot(aes(y = r_squared,
                   color = configuration)) +
  facet_wrap(.~ approach, scales = "fixed") +
  theme(legend.position = "none",
        axis.text.x = element_blank(),
        axis.ticks.x = element_blank()) +
  labs(title = "(A) R2")

mod_boxplots_r2_xAl_Ba <- mod_boxplots %>% 
  filter(!id == "Al" & !id == "Ba") %>% 
  ggplot() +
  geom_boxplot(aes(y = r_squared,
                   color = configuration)) +
  facet_wrap(.~ approach, scales = "free") +
  theme(legend.position = "bottom") # to jest opcja z usunieciem peirwiastkow, dla ktorych w niektórych konfirguracjach są tylko 2 obserwacje = r2 = 1. Ogólna tendencja pozostaje ta sama, że dla większego okna pomiarowego otrzmujemy lepsze dopasowanie modelu dla każdej konfiguracji. Widać, że dla raw i ratio w większości konfirguracji jest wyższe r2 niż dla log ratio w analogicznych konfirguracjach. Z drugiej strony jest mniej outlierow.

mod_boxplots_intercept <- ggplot(mod_boxplots) +
  geom_boxplot(aes(y = intercept,
                   color = configuration)) +
  facet_wrap(.~ approach, scales = "free") +
  theme(legend.position = "none",
        axis.text.x = element_blank(),
        axis.ticks.x = element_blank()) +
  labs(title = "(B) Intercept")

mod_boxplots_slope <- ggplot(mod_boxplots) +
  geom_boxplot(aes(y = slope,
                   color = configuration)) +
  geom_hline(yintercept = 1, color = "red") +
  facet_wrap(.~ approach, scales = "fixed") +
  theme(legend.position = "bottom",
        axis.text.x = element_blank(),
        axis.ticks.x = element_blank()) +
  labs(title = "(C) Slope")

mod_boxplots_all <- grid.arrange(mod_boxplots_r2,
                                 mod_boxplots_intercept,
                                 mod_boxplots_slope,
                                 ncol = 1,
                                 heights = c(1, 1, 1.2))
  
```

